<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UsersMapper">
	<insert id = "insertUser" parameterType="vo.UsersVO">
		insert into users(users_id, name, password, email, join_date, img)
		values(#{users_id},#{name},#{password},#{email}, sysdate, 'default.png')
	</insert>
	<select id="searchLoginId" resultType="vo.UsersVO" parameterType="string">
		select users_id, name, password from users where users_id like #{idVal}
	</select>
	<select id = "idCheck" parameterType = "String" resultType = "int">
    SELECT COUNT(*) FROM users WHERE users_id = #{users_id}
	</select>
	<select parameterType="string" id="showUser" resultType="vo.UsersVO"> 
		select * from users where users_id like #{idVal} 
	</select>
	<update parameterType="vo.UsersVO" id="changeUser"> 
		update users set name=#{name},password=#{password},email=#{email} where users_id like #{users_id} 
	</update>
	<update parameterType="vo.UsersVO" id="addInfo"> 
		update users set lat=#{lat}, lng=#{lng}, field=#{field}, img=#{img} where users_id like #{users_id} 
	</update>
	<update parameterType="vo.UsersVO" id="addInfoException"> 
		update users set lat=#{lat}, lng=#{lng}, field=#{field} where users_id like #{users_id} 
	</update>
	<select parameterType="string" id="searchGroupId" resultType="_int"> 
		select gid from users_group where users_id = #{users_id} 
	</select>
	<select id="myGroup" parameterType="java.util.HashMap" resultType="vo.GroupVO">
		select * from users_group u, groups g where u.gid=g.gid and users_id = #{idVal} and u.cofirm in (#{accept},#{leader})
	</select>
	<select id="matchInfo" parameterType="string" resultType = "vo.UsersVO">
		select * from users where users_id =#{idVal}
	</select>
	<select id="allUsersLocation" parameterType="java.util.HashMap" resultType="vo.UsersVO">
		<![CDATA[select * from users where field=#{field} and ( 6371 * acos( cos( radians(lat) ) * cos( radians( #{lat} ) ) * cos( radians( #{lng} ) - radians(lng) ) + sin( radians(lat) ) * sin( radians(  #{lat} ) ) ) ) < #{range}]]>
	</select> 
</mapper>